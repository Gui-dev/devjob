generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CANDIDATE
  RECRUITER
  ADMIN
}

enum JobType {
  REMOTE
  ONSITE
  HYBRID
}

enum JobLevel {
  JUNIOR
  PLENO
  SENIOR
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model User {
  id             String           @id @default(cuid())
  name           String
  email          String           @unique
  password       String
  role           Role             @default(CANDIDATE)
  createdAt      DateTime         @default(now()) @map("created_at")
  job            Job[]
  jobApplication JobApplication[]

  @@map("users")
}

model Job {
  id           String   @id @default(cuid())
  recruiterId  String   @map("recruiter_id")
  title        String
  description  String
  company      String
  location     String
  type         JobType
  level        JobLevel
  technologies String[]
  createdAt    DateTime @default(now()) @map("created_at")

  recruiter      User             @relation(fields: [recruiterId], references: [id])
  jobApplication JobApplication[]

  @@map("jobs")
}

model JobApplication {
  id          String            @id @default(cuid())
  jobId       String            @map("job_id")
  userId      String            @map("user_id")
  message     String?
  githubUrl   String?           @map("github_url")
  linkedinUrl String?           @map("linkedin_url")
  status      ApplicationStatus @default(PENDING)
  createdAt   DateTime          @default(now()) @map("created_at")

  job  Job  @relation(fields: [jobId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([jobId, userId])
  @@map("job_applications")
}
